//写一个函数，交换两个整形的内容

//函数返回类型的地方写出： void - 表示这个函数不返回任何值，也不需要返回
//void Swap(int x, int y)  // 形式参数 - 形参    //  传值调用
//{
//	int z = 0;
//	z = x;
//	x = y;
//	y = z;
//}
//
//int main()
//{
//	int a = 10;
//	int b = 20;
//	
//	printf("交换前： a=%d b=%d\n", a, b);
//	Swap(a, b);
//	printf("交换后： a=%d b=%d\n", a, b);
//	return 0;                              
//}
//交换失败 - 由于x & y 是独立的空间，x和y的改变并不会影响a和b


//利用指针来存储
////int main()
////{
////	int a = 10;
////	int* pa = &a;//pa是一个指针变量
////	*pa = 20;
////	printf("%d\n", a);
////	return 0;
////}



//void Swap2(int* pa, int* pb)    //  形式参数  -  形参   //传址调用
//{
//	int z = 0;
//	z = *pa;
//	*pa = *pb;
//	*pb = z;
//}
//
//int main()
//{
//	int a = 10;
//	int b = 20;
//	
//   
//	printf("交换前: a=%d b=%d\n", a, b);
//	Swap2(&a, &b);                                 //  实际参数  -  实参
//	printf("交换后: a=%d b=%d\n", a, b);
//
//	return 0;                              
//}

//实际参数 - 真实传给函数的参数。实参：常量，变量，表达式，函数等。无论实参是何种类型的量，在进行函数调用时，都必须要有明确的值，以便把这些值传送给形参

//形式函数 - 是指函数名括号中的变量，因为形参只有在被函数调用的过程才实例化（分配内存单元），所以为形参。形参当函数调用完成之后就自动销毁，因此形参只有在函数才有效
